{"version":3,"sources":["components/Hour.js","components/Day.js","App.js","serviceWorker.js","index.js"],"names":["Hour","getClassName","_this","props","hours","marked","className","react_default","a","createElement","this","onMouseDown","toggleState","bind","id","onMouseOver","Component","Day","day","find","hour","getHours","map","components_Hour","key","Object","assertThisInitialized","dayName","onClick","markAllDay","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","entryData","mo","bt","et","tu","we","th","fr","sa","su","importEntryData","finalData","keys","index","Array","apply","value","hourMark","timeRange","push","showResultData","exportDayData","startCounter","markedRange","length","document","getElementsByClassName","innerText","JSON","stringify","undefined","markHour","hourId","state","mouseStateDown","setState","week","isOnMouseOverHandleAllowed","markValue","getDay","components_Day","getDayRow","getHoursTitle","onMouseUp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c731d2a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Hour extends Component {\n    getClassName = () => {\n        let className = \"cell cellBorder hour\";\n        return this.props.hours.marked ? className + \" greyBack\" : className;\n    }\n    render() {\n        return <button className={this.getClassName()}\n                       onMouseDown={this.props.toggleState.bind(this, this.props.hours.id)}\n                       onMouseOver={this.props.onMouseOver.bind(this, this.props.hours.id)}\n    />;\n    }\n}\n\nexport default Hour;","import React, { Component } from 'react';\nimport Hour from './Hour.js';\n\nclass Day extends Component {\n    getClassName = () => {\n        let className = \"cell cellBorder\";\n        if(this.props.day.hours[0].marked && this.props.day.hours.find((hour) => {\n            return this.props.day.hours[0].marked !== hour.marked;\n        }) == null){className += \" blackBackground\"}\n\n        return className;\n    }\n\n    getHours = () => {\n        return this.props.day.hours.map((hours) => {\n            return <Hour key={hours.id} hours={hours}\n                         toggleState={this.props.toggleState.bind(this, this.props.day.dayName)}\n                         onMouseOver= {this.props.onMouseOver.bind(this, this.props.day.dayName)}/>\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <button className=\"cell cellBorder\">{this.props.day.dayName}</button>\n                <button className={this.getClassName()} onClick={this.props.markAllDay.bind(this, this.props.day.dayName)}>All</button>\n                {this.getHours()}\n            </div>\n        );\n    }\n}\n\nexport default Day;","import React, { Component } from 'react';\nimport './App.css';\nimport Day from './components/Day.js';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            week: this.importEntryData(this.entryData),\n            mouseStateDown: false,\n            isOnMouseOverHandleAllowed: false\n        };\n    }\n\n    entryData = {\n        \"mo\": [{\"bt\": 240, \"et\": 779}],\n        \"tu\": [],\n        \"we\": [],\n        \"th\": [{\"bt\": 240, \"et\": 779}, {\"bt\": 1140, \"et\": 1319}],\n        \"fr\": [{\"bt\": 660, \"et\": 1019}],\n        \"sa\": [{\"bt\": 0, \"et\": 1439}],\n        \"su\": []\n    }\n\n    importEntryData = (entryData) => {\n        let finalData = [];\n        Object.keys(entryData).map((dayName, index) => {\n            let hours = [];\n            Array.apply(null, Array(24)).map((value, index) => {\n                let hourMark = false;\n                entryData[dayName].map((timeRange) => {\n                    if(index * 60 >= timeRange[\"bt\"] && index * 60 - 1 <= timeRange[\"et\"]){\n                        hourMark = true;\n                    }\n                    return false;\n                });\n                hours.push({id: index, marked: hourMark});\n                return false;\n            });\n            finalData.push({dayName: dayName, hours: hours});\n            return false;\n        });\n        this.showResultData();\n        return finalData;\n    }\n\n    exportDayData = (day) => {\n        let startCounter = false;\n        let markedRange = {\"bt\": 0, \"et\": 0};\n        this.entryData[day.dayName]=[];\n        day.hours.map(hour => {\n            if(!startCounter && hour.marked){\n                markedRange.bt = hour.id * 60;\n                startCounter = true;\n            }\n            if(startCounter && !hour.marked){\n                markedRange.et = hour.id * 60 - 1;\n                startCounter = false;\n                this.entryData[day.dayName].push(markedRange);\n                markedRange = {\"bt\": 0, \"et\": 0};\n            }\n            if(startCounter && day.hours.length - 1 === hour.id){//last hour should be handle in a special way\n                markedRange.et = (1 + hour.id) * 60 - 1;\n                startCounter = false;\n                this.entryData[day.dayName].push(markedRange);\n            }\n            return false;\n        });\n        this.showResultData();\n    };\n\n    showResultData = () => {\n        document.getElementsByClassName(\"showResult\")[0].innerText = 'MO\\n' + JSON.stringify(this.entryData['mo'], undefined, 4);\n        document.getElementsByClassName(\"showResult\")[1].innerText = 'TU\\n' + JSON.stringify(this.entryData['tu'], undefined, 4);\n        document.getElementsByClassName(\"showResult\")[2].innerText = 'WE\\n' + JSON.stringify(this.entryData['we'], undefined, 4);\n        document.getElementsByClassName(\"showResult\")[3].innerText = 'TH\\n' + JSON.stringify(this.entryData['th'], undefined, 4);\n        document.getElementsByClassName(\"showResult\")[4].innerText = 'FR\\n' + JSON.stringify(this.entryData['fr'], undefined, 4);\n        document.getElementsByClassName(\"showResult\")[5].innerText = 'SA\\n' + JSON.stringify(this.entryData['sa'], undefined, 4);\n        document.getElementsByClassName(\"showResult\")[6].innerText = 'SU\\n' + JSON.stringify(this.entryData['su'], undefined, 4);\n\n    }\n    markHour = (dayName, hourId) => {\n        if(!this.state.mouseStateDown){return;}\n        this.setState({week: this.state.week.map(day => {\n            if(day.dayName === dayName){\n                day.hours.map(hour => {\n                    if(hour.id === hourId){\n                        if(!this.state.isOnMouseOverHandleAllowed){\n                            if(!hour.marked){\n                                this.setState({isOnMouseOverHandleAllowed: true});\n                            }\n                            hour.marked = !hour.marked;\n                        }\n                        else{\n                            hour.marked = true;\n                        }\n                    }\n                    return hour;\n                });\n                this.exportDayData(day);\n            }\n            return day;\n        })});\n    }\n\n    markAllDay = (dayName) => {\n        let markValue = false;\n        this.setState({week: this.state.week.map(day => {\n                if(day.dayName === dayName){\n                    // check what we have to do mark or unmark all day\n                    if(day.hours.find((hour) => {\n                        return !hour.marked;\n                    })){ markValue = true;}\n                    // all day mark perform\n                    day.hours.map(hour => {\n                            hour.marked = markValue;\n                        return hour;\n                    });\n                    this.exportDayData(day);\n                }\n                return day;\n            })});\n    }\n\n    getDay = (day) => {\n        return (<Day key={day.dayName} day={day}\n                     toggleState={this.toggleState}\n                     onMouseOver= {this.onMouseOver}\n                     markAllDay={this.markAllDay}/>\n        );\n    }\n\n    getDayRow = () => {\n        return this.state.week.map((day) => {\n            return this.getDay(day);\n        });\n    }\n\n    getHoursTitle = () => {\n        return Array.apply(null, Array(8)).map((value, hourId) => {\n            return <div className=\"cell cellLeftBorder\" key={hourId}><pre>{hourId * 3}.00</pre></div>\n        });\n    }\n\n    toggleState = (dayName, hourId) => {\n        this.setState({mouseStateDown: hourId !== -1}, () => {this.markHour(dayName, hourId)});\n        if(hourId === -1){this.setState({isOnMouseOverHandleAllowed: false});}\n    }\n\n    onMouseOver = (dayName, hourId) => {\n        if(this.state.isOnMouseOverHandleAllowed){this.markHour(dayName, hourId)}\n    }\n\n    render() {\n        return (\n            <div className=\"App\" onMouseUp={this.toggleState.bind(this, null, -1)}>\n                <div className=\"title\"><h2>WEEKLY SHEDULE</h2></div>\n                <div className=\"row\">\n                    <div className=\"cell\"></div>\n                    <div className=\"cell smallFont\">ALL<br/>DAY</div>\n                    {this.getHoursTitle()}\n                </div>\n                {this.getDayRow()}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}